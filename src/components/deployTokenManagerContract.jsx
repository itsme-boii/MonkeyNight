export async function deployTokenManagerContract(tokenName,tokenSymbol) {
		const { Web3 } = require('web3');
		const contractABI = [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "allowance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "needed",
						"type": "uint256"
					}
				],
				"name": "ERC20InsufficientAllowance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "needed",
						"type": "uint256"
					}
				],
				"name": "ERC20InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "approver",
						"type": "address"
					}
				],
				"name": "ERC20InvalidApprover",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "ERC20InvalidReceiver",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "ERC20InvalidSender",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "ERC20InvalidSpender",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "tokenaddress",
						"type": "address"
					}
				],
				"name": "TokenAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfered",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "addToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approveOthers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkAllowance",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "allowance",
								"type": "uint256"
							}
						],
						"internalType": "struct TokenManager.AllowanceAmount",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalanceHistory",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "balance",
								"type": "uint256"
							}
						],
						"internalType": "struct TokenManager.BalanceHistory[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		];
	const contractBytecode='608060405234801562000010575f80fd5b5060405162001cb538038062001cb583398181016040528101906200003691906200022b565b81818160039081620000499190620004e5565b5080600490816200005b9190620004e5565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005c9565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200010782620000bf565b810181811067ffffffffffffffff82111715620001295762000128620000cf565b5b80604052505050565b5f6200013d620000a6565b90506200014b8282620000fc565b919050565b5f67ffffffffffffffff8211156200016d576200016c620000cf565b5b6200017882620000bf565b9050602081019050919050565b5f5b83811015620001a457808201518184015260208101905062000187565b5f8484015250505050565b5f620001c5620001bf8462000150565b62000132565b905082815260208101848484011115620001e457620001e3620000bb565b5b620001f184828562000185565b509392505050565b5f82601f83011262000210576200020f620000b7565b5b815162000222848260208601620001af565b91505092915050565b5f8060408385031215620002445762000243620000af565b5b5f83015167ffffffffffffffff811115620002645762000263620000b3565b5b6200027285828601620001f9565b925050602083015167ffffffffffffffff811115620002965762000295620000b3565b5b620002a485828601620001f9565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002fd57607f821691505b602082108103620003135762000312620002b8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200033a565b6200038386836200033a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003cd620003c7620003c1846200039b565b620003a4565b6200039b565b9050919050565b5f819050919050565b620003e883620003ad565b62000400620003f782620003d4565b84845462000346565b825550505050565b5f90565b6200041662000408565b62000423818484620003dd565b505050565b5b818110156200044a576200043e5f826200040c565b60018101905062000429565b5050565b601f8211156200049957620004638162000319565b6200046e846200032b565b810160208510156200047e578190505b620004966200048d856200032b565b83018262000428565b50505b505050565b5f82821c905092915050565b5f620004bb5f19846008026200049e565b1980831691505092915050565b5f620004d58383620004aa565b9150826002028217905092915050565b620004f082620002ae565b67ffffffffffffffff8111156200050c576200050b620000cf565b5b620005188254620002e5565b620005258282856200044e565b5f60209050601f8311600181146200055b575f841562000546578287015190505b620005528582620004c8565b865550620005c1565b601f1984166200056b8662000319565b5f5b8281101562000594578489015182556001820191506020850194506020810190506200056d565b86831015620005b45784890151620005b0601f891682620004aa565b8355505b6001600288020188555050505b505050505050565b6116de80620005d75f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80639405de641161008a578063a9c7d68a11610064578063a9c7d68a1461024c578063d7081e031461026a578063dd62ed3e14610286578063fd490b45146102b6576100e8565b80639405de64146101e057806395d89b41146101fe578063a9059cbb1461021c576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806363693807146101a657806370a08231146101b0576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102e6565b6040516101019190611095565b60405180910390f35b610124600480360381019061011f9190611146565b610376565b604051610131919061119e565b60405180910390f35b610142610398565b60405161014f91906111c6565b60405180910390f35b610172600480360381019061016d91906111df565b6103a1565b60405161017f919061119e565b60405180910390f35b6101906103cf565b60405161019d919061124a565b60405180910390f35b6101ae6103d7565b005b6101ca60048036038101906101c59190611263565b610638565b6040516101d791906111c6565b60405180910390f35b6101e861067d565b6040516101f591906112b7565b60405180910390f35b6102066106a0565b6040516102139190611095565b60405180910390f35b61023660048036038101906102319190611146565b610730565b604051610243919061119e565b60405180910390f35b610254610752565b60405161026191906113a5565b60405180910390f35b610284600480360381019061027f9190611146565b6107c1565b005b6102a0600480360381019061029b91906113c5565b610940565b6040516102ad91906111c6565b60405180910390f35b6102d060048036038101906102cb9190611403565b6109c2565b6040516102dd919061119e565b60405180910390f35b6060600380546102f59061145b565b80601f01602080910402602001604051908101604052809291908181526020018280546103219061145b565b801561036c5780601f106103435761010080835404028352916020019161036c565b820191905f5260205f20905b81548152906001019060200180831161034f57829003601f168201915b5050505050905090565b5f806103806109e9565b905061038d8185856109f0565b600191505092915050565b5f600254905090565b5f806103ab6109e9565b90506103b8858285610a02565b6103c3858585610a94565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f575f80fd5b5f30905060075f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b4906114d5565b60405180910390fd5b6104c9336103e8610b84565b60405180602001604052808273ffffffffffffffffffffffffffffffffffffffff1681525060065f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506009604051806040016040528062015180426105539190611520565b4261055e919061157d565b815260200161056c33610638565b815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101555050600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a48160405161062d91906115bf565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610685610ff9565b60086040518060200160405290815f82015481525050905090565b6060600480546106af9061145b565b80601f01602080910402602001604051908101604052809291908181526020018280546106db9061145b565b80156107265780601f106106fd57610100808354040283529160200191610726565b820191905f5260205f20905b81548152906001019060200180831161070957829003601f168201915b5050505050905090565b5f8061073a6109e9565b9050610747818585610a94565b600191505092915050565b60606009805480602002602001604051908101604052809291908181526020015f905b828210156107b8578382905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505081526020019060010190610775565b50505050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610819575f80fd5b8061082333610638565b1015610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90611622565b60405180910390fd5b61086f338383610a94565b60096040518060400160405280620151804261088b9190611520565b42610896919061157d565b81526020016108a433610638565b815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101555050808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8930ac7bcb101f94c05b13845098ae74383bfb9e348e73061b730040945cbb8260405160405180910390a45050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f6109ce3330846109f0565b6109d83330610940565b60085f018190555060019050919050565b5f33905090565b6109fd8383836001610b92565b505050565b5f610a0d8484610940565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a8e5781811015610a7f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a7693929190611640565b60405180910390fd5b610a8d84848484035f610b92565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b04575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610afb91906115bf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b74575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6b91906115bf565b60405180910390fd5b610b7f838383610d61565b505050565b610b8e8282610f7a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c02575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bf991906115bf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c72575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c6991906115bf565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d5b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5291906111c6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610db1578060025f828254610da59190611675565b92505081905550610e7f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e3a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e3193929190611640565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec6578060025f8282540392505081905550610f10565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f6d91906111c6565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fea575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fe191906115bf565b60405180910390fd5b610ff55f8383610d61565b5050565b60405180602001604052805f81525090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611042578082015181840152602081019050611027565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6110678261100b565b6110718185611015565b9350611081818560208601611025565b61108a8161104d565b840191505092915050565b5f6020820190508181035f8301526110ad818461105d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e2826110b9565b9050919050565b6110f2816110d8565b81146110fc575f80fd5b50565b5f8135905061110d816110e9565b92915050565b5f819050919050565b61112581611113565b811461112f575f80fd5b50565b5f813590506111408161111c565b92915050565b5f806040838503121561115c5761115b6110b5565b5b5f611169858286016110ff565b925050602061117a85828601611132565b9150509250929050565b5f8115159050919050565b61119881611184565b82525050565b5f6020820190506111b15f83018461118f565b92915050565b6111c081611113565b82525050565b5f6020820190506111d95f8301846111b7565b92915050565b5f805f606084860312156111f6576111f56110b5565b5b5f611203868287016110ff565b9350506020611214868287016110ff565b925050604061122586828701611132565b9150509250925092565b5f60ff82169050919050565b6112448161122f565b82525050565b5f60208201905061125d5f83018461123b565b92915050565b5f60208284031215611278576112776110b5565b5b5f611285848285016110ff565b91505092915050565b61129781611113565b82525050565b602082015f8201516112b15f85018261128e565b50505050565b5f6020820190506112ca5f83018461129d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b604082015f82015161130d5f85018261128e565b506020820151611320602085018261128e565b50505050565b5f61133183836112f9565b60408301905092915050565b5f602082019050919050565b5f611353826112d0565b61135d81856112da565b9350611368836112ea565b805f5b8381101561139857815161137f8882611326565b975061138a8361133d565b92505060018101905061136b565b5085935050505092915050565b5f6020820190508181035f8301526113bd8184611349565b905092915050565b5f80604083850312156113db576113da6110b5565b5b5f6113e8858286016110ff565b92505060206113f9858286016110ff565b9150509250929050565b5f60208284031215611418576114176110b5565b5b5f61142584828501611132565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061147257607f821691505b6020821081036114855761148461142e565b5b50919050565b7f546f6b656e20616c7265616479206372656174656400000000000000000000005f82015250565b5f6114bf601583611015565b91506114ca8261148b565b602082019050919050565b5f6020820190508181035f8301526114ec816114b3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61152a82611113565b915061153583611113565b925082611545576115446114f3565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61158782611113565b915061159283611113565b92508282039050818111156115aa576115a9611550565b5b92915050565b6115b9816110d8565b82525050565b5f6020820190506115d25f8301846115b0565b92915050565b7f4e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f61160c601283611015565b9150611617826115d8565b602082019050919050565b5f6020820190508181035f83015261163981611600565b9050919050565b5f6060820190506116535f8301866115b0565b61166060208301856111b7565b61166d60408301846111b7565b949350505050565b5f61167f82611113565b915061168a83611113565b92508282019050808211156116a2576116a1611550565b5b9291505056fea26469706673582212205ea904f49f9f52a8a1633eb59d038bd9e51a9e16e30c381bb4bd4080e2bd652b64736f6c63430008140033';
		const web3 = new Web3(window.ethereum);
		try {
			const accounts = await requestAccounts();
			if (accounts.length === 0) {
				throw new Error('No accounts found');
			}
			const contract = new web3.eth.Contract(contractABI);
			console.log(tokenName,tokenSymbol);

			const deployTx = contract.deploy({
				data: contractBytecode,
				arguments: [tokenName,tokenSymbol],
			});
			// console.log("account 0 is ",accounts[0]);
			const gasEstimate = await deployTx.estimateGas({
				from: accounts[0],
			});

			const deployedContract = await deployTx.send({
				from: accounts[0],
				gas: gasEstimate,
			});
			sessionStorage.setItem("tokenAddress", deployedContract.options.address);
			console.log('Contract deployed at address:', deployedContract.options.address,deployedContract.options.address);
			return deployedContract.options.address;
		} catch (error) {
			console.error('Error deploying contract:', error);
			throw error;
		}

		//This will get Accounts connected
		async function requestAccounts() {
			if (window.ethereum) {
				try {
					await window.ethereum.request({ method: 'eth_requestAccounts' });
					return await web3.eth.getAccounts();
				} catch (error) {
					console.error('User denied account access:', error);
					throw error;
				}
			} else {
				console.error('No Ethereum provider detected.');
				throw new Error('No Ethereum provider detected.');
			}
		}
};
